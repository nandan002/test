# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch

  #schedule:
    #- cron: '10 9 * * *'
  #push:
     #branches:
       #- main
     #types:
      # - opened
    # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  
  #pull_request:
    #branches: [ "main" ]
#concurrency:
  #group: ${{github.ref}}
  #cancel-in-progress: true
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  job1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Caching
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache.pip
          key: ${{runner.os}}-pip-${{hashFiles('requirements.txt')}}
          restore-keys: ${{runner.os}}-pip-
              
      # Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Test Runs
      - name: Run Tests
        run: |
          mkdir -p test-results
          pytest --junitxml=test-results/results.xml

      # Upload Artifacts
      - name: Uploading Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/

      # Run python code
      - id: output
        name: Running the application
        run: python src/test.py
        
    
    
    
        

      
